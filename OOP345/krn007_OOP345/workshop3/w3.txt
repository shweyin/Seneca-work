Script started on Thu 28 Dec 2017 02:52:56 PM EST
khshah2@matrix:~/OOP345/workshop3> whoami
khshah2
khshah2@matrix:~/OOP345/workshop3> [Kkhshah2@matrix:~/OOP345/workshop3> cat w3.cpp Text.h Text.cpp
/* OOP345 Workshop 3
Name - Karan Shah
Student_Id: 129965166
Date - 28th Decemeber 2017*/

#include <iostream>
#include <iomanip>
#include <utility>
#include <ctime>
#include "Text.h"
#define TIME(start, end) double((end) - (start)) / CLOCKS_PER_SEC
using namespace std;
using namespace w3;
int main(int args, char* argv[]) {
	if (args == 1) {
		cerr << argv[0] << ": missing file operand" << endl;
		return 1;
	}
	else if (args != 2) {
		cerr << argv[0] << ": too many arguments" << endl;
		return 2;
	}
	clock_t cs, ce;
	{
		cout << fixed << setprecision(3);
		cs = clock();
		Text a;
		ce = clock();
		cout << "Constructor      " << TIME(cs, ce) << " seconds";
		cout << " - a.size = " << a.size() << endl;

		cs = clock();
		Text b(argv[1]);
		ce = clock();
		cout << "Constructor      " << TIME(cs, ce) << " seconds";
		cout << " - b.size = " << b.size() << endl;

		cs = clock();
		a = b;
		ce = clock();
		cout << "Copy Assignment  " << TIME(cs, ce) << " seconds";
		cout << " - a.size = " << a.size() << endl;

		cs = clock();
		a = move(b);
		ce = clock();
		cout << "Move Assignment  " << TIME(cs, ce) << " seconds";
		cout << " - a.size = " << a.size() << endl;

		cs = clock();
		Text c = a;
		ce = clock();
		cout << "Copy Constructor " << TIME(cs, ce) << " seconds";
		cout << " - c.size = " << c.size() << endl;

		cs = clock();
		Text d = move(a);
		ce = clock();
		cout << "Move Constructor " << TIME(cs, ce) << " seconds";
		cout << " - d.size = " << d.size() << endl;

		cs = clock();
	}
	ce = clock();
	cout << "Destructor       " << TIME(cs, ce) << " seconds" << endl;
}/* OOP345 Workshop 3
Name - Karan Shah
Student_Id: 129965166
Date - 28th Decemeber 2017*/

#pragma once
#include <string>
#include <iostream>
#include <fstream>
using namespace std;
namespace w3 {
	class Text {
	private:
		int fCount;
		string* strs;
	public:
		Text();
		Text(const string fileName);
		Text(const Text& other);
		Text& operator=(const Text& other);
		Text(Text&& other);
		Text&& operator=(Text&& other);
		~Text();
		size_t size() const;
	};
}
/* OOP345 Workshop 3
Name - Karan Shah
Student_Id: 129965166
Date - 28th Decemeber 2017*/

#include "Text.h"
namespace w3 {
	Text::Text()
	{
		strs = nullptr;
		fCount = 0;
	}

	Text::Text(const string fileName) : fCount(0)
	{
		ifstream is(fileName);

		if (is.is_open())
		{
			int count = 0;
			string line;

			do
			{
				getline(is, line, '\n');
				count++;
			} while (!is.fail());

			is.clear();
			is.seekg(0, ios::beg);

			strs = new string[count];

			for (int i = 0; !is.fail(); i++)
				getline(is, strs[i], '\n');

			fCount = count;
			is.close();
		}
		else
			Text();
	}

	Text::Text(const Text& other)
	{
		fCount = 0;
		strs = '\0';
		*this = other;
	}

	Text& Text::operator=(const Text& other) {
		if (this != &other) {
			if (strs) {
				delete[] strs;
				strs = '\0';
				fCount = 0;
			}

			if (other.strs) {
				fCount = other.fCount;
				strs = new string[fCount];

				for (size_t i = 0; i < fCount; i++)
					strs[i] = other.strs[i];
			}
		}

		return *this;
	}

	Text::Text(Text&& other) {
		fCount = 0;
		strs = '\0';
		*this = move(other);
	}

	Text&& Text::operator=(Text&& other) {
		if (this != &other) {
			if (strs) {
				delete[] strs;
				strs = '\0';
				fCount = 0;
			}

			fCount = other.fCount;
			strs = other.strs;

			other.fCount = 0;
			other.strs = '\0';
		}

		return move(*this);
	}

	Text::~Text() {
		delete[] strs;
		strs = nullptr;
	}

	size_t Text::size() const {
		return fCount;
	}
}khshah2@matrix:~/OOP345/workshop3> g++ -o w3 -std=c++0x w3.cpp Text.cpp
khshah2@matrix:~/OOP345/workshop3> w3 gutenberg_shakespeare
Constructor      0.000 seconds - a.size = 0
Constructor      0.130 seconds - b.size = 124457
Copy Assignment  0.010 seconds - a.size = 124457
Move Assignment  0.010 seconds - a.size = 124457
Copy Constructor 0.010 seconds - c.size = 124457
Move Constructor 0.000 seconds - d.size = 124457
Destructor       0.020 seconds
khshah2@matrix:~/OOP345/workshop3> ^V[Kexit
exit

Script done on Thu 28 Dec 2017 02:54:17 PM EST
